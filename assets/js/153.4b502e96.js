(window.webpackJsonp=window.webpackJsonp||[]).push([[153],{479:function(e,a,s){"use strict";s.r(a);var n=s(7),t=Object(n.a)({},(function(){var e=this,a=e._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h3",{attrs:{id:"图数据库及cypher语句"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#图数据库及cypher语句"}},[e._v("#")]),e._v(" 图数据库及cypher语句")]),e._v(" "),a("h4",{attrs:{id:"_1-对图数据库的理解"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-对图数据库的理解"}},[e._v("#")]),e._v(" 1.对图数据库的理解")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[e._v("    最近工作中偶然使用到了图数据库，对图数据库的概念理解的还是比较模糊。刚开始我理解的节点和边都可以变相的理解为java中的类，标签 就是类的名字，比如 match (n:Person) return n limit 10   这个Person就是类，n就是类实例化后得变量名，但是标签又不完全等同于类，在java中相同名字的类只能有一个，Person可以有多个，这样解释反而有矛盾。过一段时间后我的理解有所改变，Person是标签的值，标签的值可以是Person，也可以是Animal，结合查询语句，可以把标签理解为“条件”，match (n:Person) return n limit 10，用文字描述就是，找出所有标签值是Person的数据,截取10条，将数据赋值给变量n。变量n可以类比为一个java对象，对象中有属性，对应的就是点和边的属性。\n")])])]),a("h4",{attrs:{id:"_2-java连接-图数据库"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-java连接-图数据库"}},[e._v("#")]),e._v(" 2.java连接 图数据库")]),e._v(" "),a("p",[e._v("java连接数据库的方式可以参考 "),a("a",{attrs:{href:"https://www.cnblogs.com/jpfss/p/11231641.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("Java连接Neo4j的两种方式 - 星朝 - 博客园 (cnblogs.com)"),a("OutboundLink")],1)]),e._v(" "),a("h4",{attrs:{id:"_3-cypher语句基本使用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-cypher语句基本使用"}},[e._v("#")]),e._v(" 3.cypher语句基本使用")]),e._v(" "),a("p",[e._v("————————————————\n版权声明：本文为CSDN博主「简单随风」的原创文章，遵循CC 4.0 BY-SA版权协议，转载请附上原文出处链接及本声明。\n原文链接：https://blog.csdn.net/lt326030434/article/details/83542676")]),e._v(" "),a("h5",{attrs:{id:"_1-查询"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-查询"}},[e._v("#")]),e._v(" 1.查询")]),e._v(" "),a("p",[e._v("简单查询\n查询10个Person节点")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("match (n:Person) return n limit 10  \n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br")])]),a("p",[e._v("查询Person节点与Phone节点中有HAS_PHONE关系")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("match  (n:Person)-[:HAS_PHONE]->(p:Phone) return n,p\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br")])]),a("p",[e._v("查询10条关系：Person节点与Phone节点中有HAS_PHONE关系，且Person节点的name=‘姓名6’")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('match  (n:Person)-[:HAS_PHONE]->(p:Phone) where n.name="姓名6" return n,p limit 20 \n')])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br")])]),a("p",[e._v("多维度查询\n查询以下关系:Person节点n和Phone节点p1拥有HAS_PHONE关系，且p1节点与另一个Phone节点p2拥有CALL关系")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("match  (n:Person)-[:HAS_PHONE]->(p1:Phone)-[:CALL]->(p2:Phone)   \n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br")])]),a("p",[e._v("关系查询\n查询任意节点与任意节点间有CALL关系的关系")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("match p=()-[:CALL]->()\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br")])]),a("p",[e._v("正则查询\n查询Users所有节点中，name符合正则’Jack.*'的节点")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("match (n:Users) where n.name=~'Jack.*' return n\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br")])]),a("p",[e._v("包含查询\n查询Users所有节点中，name中包含’J’的节点")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("match (n:Users) where n.name contains 'J' return n\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br")])]),a("h5",{attrs:{id:"_2-创建"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-创建"}},[e._v("#")]),e._v(" 2.创建")]),e._v(" "),a("p",[e._v("简单创建\n创建一个Person-LOVES->Dog的关系")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("create (n:Person)-[:LOVES]->(m:Dog)\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br")])]),a("p",[e._v("属性创建\n创建Person-FEAR->Tiger的关系，且Person.name=‘李四’，FEAR.Level=1,Tiger.type=‘东北虎’")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('create (n:Person{name:"李四"})-[:FEAR(Level:1)]->(M:Tiger{type:"东北虎"})\n')])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br")])]),a("p",[e._v('给两个没有关系的实体创建关系\n创建一个关系k，使得name=“王五”的Person与name:"赵六"的Person有KNOW的关系')]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('match (n:Person{name:"王五"}), (m:Person{name:"赵六"})\ncreate (n)-[k:KNOW]->(m) return k\n')])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br")])]),a("p",[e._v("有则返回，没有则创建：merge\n如果创建的关系已存在，则返回该关系，如果创建的关系不存在，则创建")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('match (n:Person{name:"王五"}), (m:Person{name:"赵六"})\nmerge (n)-[k:KNOW]->(m) return k\n')])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br")])]),a("h5",{attrs:{id:"_3-删除"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-删除"}},[e._v("#")]),e._v(" 3.删除")]),e._v(" "),a("p",[e._v('删除关系\n删除name="李四"的Person节点与Tiger节点间的FEAR关系')]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('match (n:Person{name:"李四"})-[f:FEAR]->(M:Tiger)\ndelete f\n')])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br")])]),a("p",[e._v('删除实体\n删除name="李四"的Person节点')]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('match (n:Person{name:"李四"})\ndelete n\n')])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br")])]),a("p",[e._v("删除重复节点\n如果有多个name=“张三”的People节点，删除只保留一个")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('match (p:People{name:"张三"}) with p skip 1 delete p\n')])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br")])]),a("h5",{attrs:{id:"_4-修改"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-修改"}},[e._v("#")]),e._v(" 4.修改")]),e._v(" "),a("p",[e._v('修改属性\n给type="东北虎"的Tiger节点插入age标签，且age的属性为10')]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('match (t:Tiger) where t.type="东北虎" set t.age=10 return t\n')])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br")])]),a("p",[e._v("修改关系名称\n将HAS_Phone修改为HAS_PHONE")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("match (a)-[h:HAS_Phone]->(b) \ncreate (a)-[h2:HAS_PHONE]->(b) \nset h2=h \nwith h \ndelete h\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br"),a("span",{staticClass:"line-number"},[e._v("5")]),a("br")])]),a("h5",{attrs:{id:"_5-创建唯一索引"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-创建唯一索引"}},[e._v("#")]),e._v(" 5.创建唯一索引")]),e._v(" "),a("p",[e._v("给Phone节点创建唯一索引number")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("CREATE CONSTRAINT ON (p:Phone) ASSERT p.number IS UNIQUE\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br")])])])}),[],!1,null,null,null);a.default=t.exports}}]);