(window.webpackJsonp=window.webpackJsonp||[]).push([[213],{539:function(t,n,_){"use strict";_.r(n);var s=_(7),e=Object(s.a)({},(function(){var t=this,n=t._self._c;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h1",{attrs:{id:"mysql设置日志输出方式"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#mysql设置日志输出方式"}},[t._v("#")]),t._v(" MySQL设置日志输出方式")]),t._v(" "),n("p",[t._v("MySQL 的查询日志支持写入到文件或写入数据表两种输出形式。启用了普通查询日志或慢查询日志功能后，可以选择让服务器把日志写入到日志文件、mysql 数据库中的日志表、或者同时写到这两个地方。")]),t._v(" "),n("p",[t._v("可以通过以下命令查看日志输出类型：")]),t._v(" "),n("p",[t._v("mysql> SHOW VARIABLES LIKE '%log_out%';\n+---------------+-------+\n| Variable_name | Value |\n+---------------+-------+\n| log_output    | FILE  |\n+---------------+-------+\n1 row in set, 1 warning (0.08 sec)")]),t._v(" "),n("p",[t._v("结果显示，日志输出类型为 FILE。")]),t._v(" "),n("p",[t._v("要想在运行时更改日志输出目标，可以在启动服务器时，设置全局系统变量 log_output 的值，格式如下：")]),t._v(" "),n("p",[t._v("SET GLOBAL log_output='value';")]),t._v(" "),n("p",[t._v("value 的值可以是：")]),t._v(" "),n("ul",[n("li",[t._v("FILE：表示把日志写入到文件。如果未指定 log_output 的值，默认为 FILE。")]),t._v(" "),n("li",[t._v("TABLE：表示把日志写入到 mysql 数据库的 slow_log 或 general_log 表中。")]),t._v(" "),n("li",[t._v("MySQL 可以同时支持 2 种日志存储方式，配置的时候以逗号隔开，即 "),n("code",[t._v("log_output='FILE,TABLE'")]),t._v("。")])]),t._v(" "),n("p",[t._v("需要注意的是，系统变量 log_output 只确定了日志使用什么输出目标，并不会启用日志功能。")]),t._v(" "),n("p",[t._v("相对于写入到文件，日志写入到数据表中要耗费更多的系统资源。因此，对于需要启用查询日志，又需要获得更高的系统性能，建议优先选择将日志写入到文件。")]),t._v(" "),n("p",[t._v("日志表（slow_log 或 general_log）中的内容只允许查看，不允许修改，除非服务器自己进行更改。因此，你只能对日志表使用 SELECT 语句，不能使用 INSERT、DELETE 或 UPDATE 语句。不过，可以使用 TRUNCATE TABLE 语句来清空日志表。")]),t._v(" "),n("h4",{attrs:{id:"例-1"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#例-1"}},[t._v("#")]),t._v(" 例 1")]),t._v(" "),n("p",[t._v("首先设置日志写入到日志表，然后查询 test 数据库中 tb_student 数据表的记录，并查看 mysql 数据库中的 slow_log 表中的记录。SQL 语句和运行结果如下：")]),t._v(" "),n("p",[t._v("mysql> SET GLOBAL log_output='TABLE';\nQuery OK, 0 rows affected (0.00 sec)")]),t._v(" "),n("p",[t._v("mysql> SHOW VARIABLES LIKE '%log_out%';\n+---------------+-------+\n| Variable_name | Value |\n+---------------+-------+\n| log_output    | TABLE |\n+---------------+-------+\n1 row in set, 1 warning (0.01 sec)")]),t._v(" "),n("p",[t._v("mysql> use test;\nDatabase changed\nmysql> SELECT * FROM tb_student;\n+----+--------+\n| id | name   |\n+----+--------+\n|  1 | Java   |\n|  2 | MySQL  |\n|  3 | Python |\n+----+--------+\n3 rows in set (0.00 sec)")]),t._v(" "),n("p",[t._v("mysql> SELECT * FROM mysql.slow_log \\G\n*************************** 1. row ***************************\nstart_time: 2020-06-04 15:25:40.030420\nuser_host: root[root] @ localhost [::1]\nquery_time: 00:00:00.058887\nlock_time: 00:00:00.000000\nrows_sent: 0\nrows_examined: 0\ndb: test\nlast_insert_id: 0\ninsert_id: 0\nserver_id: 1\nsql_text: TRUNCATE TABLE mysql.slow_log\nthread_id: 11\n*************************** 2. row ***************************\nstart_time: 2020-06-04 15:25:52.229014\nuser_host: root[root] @ localhost [::1]\nquery_time: 00:00:00.000339\nlock_time: 00:00:00.000000\nrows_sent: 1\nrows_examined: 0\ndb: test\nlast_insert_id: 0\ninsert_id: 0\nserver_id: 1\nsql_text: Init DB\nthread_id: 11\n*************************** 3. row ***************************\nstart_time: 2020-06-04 15:26:00.867649\nuser_host: root[root] @ localhost [::1]\nquery_time: 00:00:00.000379\nlock_time: 00:00:00.000115\nrows_sent: 7\nrows_examined: 7\ndb: test\nlast_insert_id: 0\ninsert_id: 0\nserver_id: 1\nsql_text: SELECT * FROM tb_student\nthread_id: 11\n3 rows in set (0.00 sec)")]),t._v(" "),n("p",[t._v("结果显示，超过慢查询日志指定时间的 SQL 语句都写入到了 mysql 数据库的 slow_log 表中。")])])}),[],!1,null,null,null);n.default=e.exports}}]);