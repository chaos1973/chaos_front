(window.webpackJsonp=window.webpackJsonp||[]).push([[71],{396:function(n,s,t){"use strict";t.r(s);var a=t(7),e=Object(a.a)({},(function(){var n=this,s=n._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[s("h3",{attrs:{id:"java深度克隆"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#java深度克隆"}},[n._v("#")]),n._v(" java深度克隆")]),n._v(" "),s("p",[n._v("版权声明：本文为CSDN博主「爪 哇」的原创文章，遵循CC 4.0 BY-SA版权协议，转载请附上原文出处链接及本声明。"),s("br"),n._v("\n原文链接："),s("a",{attrs:{href:"https://blog.csdn.net/qq_40794973/article/details/106208799",target:"_blank",rel:"noopener noreferrer"}},[n._v("https://blog.csdn.net/qq_40794973/article/details/106208799"),s("OutboundLink")],1)]),n._v(" "),s("p",[n._v("浅克隆：复制对象时仅仅复制对象本身，包括基本属性，但该对象的属性引用其他对象时，该引用对象不会被复制，即拷贝出来的对象与被拷贝出来的对象中的属性引用的对象是同一个。")]),n._v(" "),s("p",[n._v("深克隆：复制对象本身的同时，也复制对象包含的引用指向的对象，即修改被克隆对象的任何属性都不会影响到克隆出来的对象。")]),n._v(" "),s("p",[s("strong",[n._v("值得一提的是，上文所说的浅拷贝只会克隆基本数据属性，而不会克隆引用其他对象的属性，但String对象又不属于基本属性，这又是为什么呢？")])]),n._v(" "),s("p",[s("strong",[n._v("这是因为String对象是不可修改的对象，每次修改其实都是新建一个新的对象，而不是在原有的对象上修改，所以当修改String属性时其实是新开辟一个空间存储String对象，并把引用指向该内存，而克隆出来的对象的String属性还是指向原有的内存地址，所以String对象在浅克隆中也表现得与基本属性一样。")])]),n._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[n._v('\n@Data\npublic class Pig implements Cloneable, Serializable {\n    private static final long serialVersionUID = 779970270042384579L;\n    private String name;\n    private Date birthday;\n    public Pig(String name, Date birthday) {this.name = name;this.birthday = birthday;}\n    // 方法1、深拷贝——使用clone方法\n    //Remove this "clone" implementation; use a copy constructor or copy factory instead.\n    @Override\n    protected Pig clone() throws CloneNotSupportedException {\n        Pig pig = (Pig) super.clone();\n        //实现深度克隆要对引用类型重新克隆，如果对象中引用类型过多的话，写的代码会变多，也有可能会有遗漏\n        pig.birthday = (Date) pig.birthday.clone();\n        return pig;\n    }\n    // 2、深拷贝——通过对象的序列化实现 (推荐)\n    public Pig deepClone() {\n        //创建流对象\n        ByteArrayOutputStream bos = null;\n        ObjectOutputStream oos = null;\n        ByteArrayInputStream bis = null;\n        ObjectInputStream ois = null;\n        try {\n            //序列化\n            bos = new ByteArrayOutputStream();\n            oos = new ObjectOutputStream(bos);\n            oos.writeObject(this); //当前这个对象以对象流的方式输出\n            //反序列化\n            bis = new ByteArrayInputStream(bos.toByteArray());\n            ois = new ObjectInputStream(bis);\n            return (Pig) ois.readObject();\n        } catch (Exception e) {\n            throw new RuntimeException(e.getMessage());\n        } finally {\n            //关闭流\n            try {\n                bos.close();\n                oos.close();\n                bis.close();\n                ois.close();\n            } catch (Exception e) {}\n        }\n    }\n}\n')])]),n._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[n._v("1")]),s("br"),s("span",{staticClass:"line-number"},[n._v("2")]),s("br"),s("span",{staticClass:"line-number"},[n._v("3")]),s("br"),s("span",{staticClass:"line-number"},[n._v("4")]),s("br"),s("span",{staticClass:"line-number"},[n._v("5")]),s("br"),s("span",{staticClass:"line-number"},[n._v("6")]),s("br"),s("span",{staticClass:"line-number"},[n._v("7")]),s("br"),s("span",{staticClass:"line-number"},[n._v("8")]),s("br"),s("span",{staticClass:"line-number"},[n._v("9")]),s("br"),s("span",{staticClass:"line-number"},[n._v("10")]),s("br"),s("span",{staticClass:"line-number"},[n._v("11")]),s("br"),s("span",{staticClass:"line-number"},[n._v("12")]),s("br"),s("span",{staticClass:"line-number"},[n._v("13")]),s("br"),s("span",{staticClass:"line-number"},[n._v("14")]),s("br"),s("span",{staticClass:"line-number"},[n._v("15")]),s("br"),s("span",{staticClass:"line-number"},[n._v("16")]),s("br"),s("span",{staticClass:"line-number"},[n._v("17")]),s("br"),s("span",{staticClass:"line-number"},[n._v("18")]),s("br"),s("span",{staticClass:"line-number"},[n._v("19")]),s("br"),s("span",{staticClass:"line-number"},[n._v("20")]),s("br"),s("span",{staticClass:"line-number"},[n._v("21")]),s("br"),s("span",{staticClass:"line-number"},[n._v("22")]),s("br"),s("span",{staticClass:"line-number"},[n._v("23")]),s("br"),s("span",{staticClass:"line-number"},[n._v("24")]),s("br"),s("span",{staticClass:"line-number"},[n._v("25")]),s("br"),s("span",{staticClass:"line-number"},[n._v("26")]),s("br"),s("span",{staticClass:"line-number"},[n._v("27")]),s("br"),s("span",{staticClass:"line-number"},[n._v("28")]),s("br"),s("span",{staticClass:"line-number"},[n._v("29")]),s("br"),s("span",{staticClass:"line-number"},[n._v("30")]),s("br"),s("span",{staticClass:"line-number"},[n._v("31")]),s("br"),s("span",{staticClass:"line-number"},[n._v("32")]),s("br"),s("span",{staticClass:"line-number"},[n._v("33")]),s("br"),s("span",{staticClass:"line-number"},[n._v("34")]),s("br"),s("span",{staticClass:"line-number"},[n._v("35")]),s("br"),s("span",{staticClass:"line-number"},[n._v("36")]),s("br"),s("span",{staticClass:"line-number"},[n._v("37")]),s("br"),s("span",{staticClass:"line-number"},[n._v("38")]),s("br"),s("span",{staticClass:"line-number"},[n._v("39")]),s("br"),s("span",{staticClass:"line-number"},[n._v("40")]),s("br"),s("span",{staticClass:"line-number"},[n._v("41")]),s("br"),s("span",{staticClass:"line-number"},[n._v("42")]),s("br"),s("span",{staticClass:"line-number"},[n._v("43")]),s("br"),s("span",{staticClass:"line-number"},[n._v("44")]),s("br"),s("span",{staticClass:"line-number"},[n._v("45")]),s("br")])])])}),[],!1,null,null,null);s.default=e.exports}}]);