(window.webpackJsonp=window.webpackJsonp||[]).push([[76],{402:function(a,t,v){"use strict";v.r(t);var n=v(7),_=Object(n.a)({},(function(){var a=this,t=a._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("p",[a._v("Java8 新增了非常多的特性，主要有以下几个：")]),a._v(" "),t("ul",[t("li",[t("strong",[a._v("Lambda 表达式")]),a._v("：Lambda 允许把函数作为一个方法的参数（函数作为参数传递到方法中）")]),a._v(" "),t("li",[t("strong",[a._v("函数式接口")]),a._v("：指的是一个有且仅有一个抽象方法，但是可以有多个非抽象方法的接口，这样的接口可以隐式转换为 Lambda 表达式")]),a._v(" "),t("li",[t("strong",[a._v("方法引用")]),a._v("：方法引用提供了非常有用的语法，可以直接引用已有Java类或对象（实例）的方法或构造器。与lambda联合使用，方法引用可以使语言的构造更紧凑简洁，减少冗余代码")]),a._v(" "),t("li",[t("strong",[a._v("默认方法")]),a._v("：默认方法就是一个在接口里面有了一个实现的方法")]),a._v(" "),t("li",[t("strong",[a._v("Stream API")]),a._v("：新添加的Stream API（java.util.stream） 把真正的函数式编程风格引入到Java中。")]),a._v(" "),t("li",[t("strong",[a._v("Optional 类")]),a._v("：Optional 类已经成为 Java 8 类库的一部分，用来解决空指针异常。")]),a._v(" "),t("li",[t("strong",[a._v("Date Time API")]),a._v("：加强对日期与时间的处理。")]),a._v(" "),t("li",[t("strong",[a._v("Nashorn, JavaScript 引擎")]),a._v("：Java 8提供了一个新的Nashorn javascript引擎，它允许我们在")])])])}),[],!1,null,null,null);t.default=_.exports}}]);